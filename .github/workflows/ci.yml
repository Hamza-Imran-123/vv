name: PHP CI and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up PHP 8.2
    - name: Set up PHP 8.2
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    # Step 3: Install PHP dependencies
    - name: Install PHP dependencies
      run: composer install

    # Step 4: Set up Node.js (for npm)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 5: Install Node.js dependencies and build
    - name: Install Node.js dependencies & build
      run: npm install && npm run build

    # Step 6: Set up database environment variables
    - name: Set up database credentials
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

    

    # Step 8: Deploy the application to a remote server
    - name: Deploy to Remote Server
  env:
    HOST: ${{ secrets.SERVER_HOST }}
    USER: ${{ secrets.SERVER_USER }}
    SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  run: |
    # Ensure all required environment variables are set
    if [ -z "$HOST" ] || [ -z "$USER" ] || [ -z "$SSH_KEY" ]; then
      echo "Error: HOST, USER, or SSH_KEY is not set." >&2
      exit 1
    fi

    # Set up SSH configuration
    mkdir -p ~/.ssh
    echo "$SSH_KEY" > ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa

    # Add the server to known hosts
    ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts || {
      echo "Error: Failed to add $HOST to known_hosts." >&2
      exit 1
    }

    # Deploy application files using rsync
    rsync -avz --exclude='node_modules' --exclude='.git' ./ "$USER@$HOST:/var/www/html/" || {
      echo "Error: rsync failed. Check SSH connection and paths." >&2
      exit 1
    }

    # Run post-deployment tasks on the server (excluding migration)
    ssh "$USER@$HOST" << EOF
      cd /var/www/html || {
        echo "Error: Failed to navigate to application directory." >&2
        exit 1
      }
      php artisan config:cache || {
        echo "Error: Failed to cache configuration." >&2
        exit 1
      }
      php artisan route:cache || {
        echo "Error: Failed to cache routes." >&2
        exit 1
      }
EOF

